buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:$grailsViewsVersion"
        classpath "gradle.plugin.com.sourcemuse.gradle.plugin:gradle-mongo-plugin:1.0.0"
    }
}

version = '0.1'

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "com.sourcemuse.mongo"
apply from: "$rootDir/gradle/codenarc/codenarc.gradle"
apply from: "$rootDir/gradle/jacoco.gradle"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    compile "org.grails.plugins:mongodb"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    compileOnly "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"

    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"

    compile "org.grails.plugins:rxjava"

    compile project(':grooves-gorm')
    compile project(':grooves-example-test')
    compile 'com.github.rahulsom:genealogy:1.3'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

tasks.findByName('bootRun').dependsOn 'startMongoDb'
tasks.findByName('bootRun').finalizedBy 'stopMongoDb'
tasks.findByName('integrationTest').dependsOn 'startMongoDb'
tasks.findByName('integrationTest').finalizedBy 'stopMongoDb'

mongo {
    port 27018
}

sonarqube {
    properties {
        property 'sonar.moduleKey', 'com.github.rahulsom:grooves:examples-grails-rdbms_mongo'
    }
}